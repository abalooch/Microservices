# Make the application available at http://localhost:8080
# These are default settings, but we add them for clarity.
server:
  port: 8080
  contextPath: /

# Configure the Authorization Server and User Info Resource Server details
security:
  oauth2:
    client:
      accessTokenUri: http://localhost:7070/authserver/oauth/token
      userAuthorizationUri: http://localhost:7070/authserver/oauth/authorize
      clientId: authserver
      clientSecret: passwordforauthserver
    resource:
      userInfoUri: http://localhost:9100/user

person:
  url: http://localhost:9100/person

# Proxies the calls to http://localhost:8080/api/* to our REST service at http://localhost:8081/*
# and automatically includes our OAuth2 token in the request headers
zuul:
  routes:
    resource:
      path: /api/**
      url: http://localhost:9100
    user: 
      path: /user/**
      url: http://localhost:9100/user
    roomservices:
      path: /reservation/**
      url: http://localhost:8101
    reservationbusinessservices:
          path: /reservationbusiness/**
          url: http://localhost:8500


# Make sure the OAuth2 token is only relayed when using the internal API,
# do not pass any authentication to the external API
proxy:
  auth:
    routes:
      api: oauth2

spring:
  application:
    name: zuulservices
  boot:
    admin:
      url: http://localhost:9999
      username: admin
      password: admin